{"version":3,"sources":["repositories/giphy.repository.js","components/GitCard.jsx","components/GifList.jsx","components/SearchBar.jsx","components/App.jsx","index.jsx"],"names":["axios","create","baseURL","params","api_key","GifCard","gif","style","float","margin","background","images","downsized","url","width","height","cursor","onClick","str","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboard","GifList","elements","gifs","map","key","id","SearchBar","state","query","limit","onInputChange","event","setState","target","onSelectChange","onFormSubmit","preventDefault","props","onSearch","onSubmit","this","htmlFor","type","placeholder","onChange","defaultValue","className","React","Component","App","doSearch","a","repository","get","q","offset","rating","lang","result","data","ReactDOM","render","getElementById"],"mappings":"gPAKeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAHQ,wBAIRC,OAAQ,CACJC,QANI,sCCwBGC,EAxBC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACTC,EAAQ,CACVC,MAAO,OACPC,OAAQ,OACRC,WAAW,OAAD,OAASJ,EAAIK,OAAOC,UAAUC,IAA9B,uBACVC,MAAO,QACPC,OAAQ,QACRC,OAAQ,WAYZ,OACI,yBAAKT,MAAOA,EAAOU,QAAS,kBAVR,SAAAC,GACpB,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGG,MAAQJ,EACXE,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAIQS,CAAgBtB,EAAIO,SCL/CgB,EAdC,SAAC,GAAc,IACrBC,EADoB,EAAXC,KACOC,KAAI,SAAA1B,GACtB,OACI,kBAAC,EAAD,CAAS2B,IAAK3B,EAAI4B,GAAI5B,IAAKA,OAInC,OACI,6BACKwB,ICmCEK,E,2MA5CXC,MAAQ,CAAEC,MAAO,GAAIC,MAAO,I,EAE5BC,cAAgB,SAAAC,GACZ,EAAKC,SAAS,CAAEJ,MAAOG,EAAME,OAAOpB,S,EAGxCqB,eAAiB,SAAAH,GACb,EAAKC,SAAS,CAAEH,MAAOE,EAAME,OAAOpB,S,EAGxCsB,aAAe,SAAAJ,GACXA,EAAMK,iBACN,EAAKC,MAAMC,SAAS,EAAKX,MAAMC,MAAO,EAAKD,MAAME,Q,wEAIjD,OACI,6BACI,6BACA,0BAAMU,SAAUC,KAAKL,cACjB,2BAAOM,QAAQ,gBAAf,eACA,2BACIhB,GAAG,eACHiB,KAAK,OACLC,YAAY,YACZC,SAAUJ,KAAKV,gBACnB,2BAAOW,QAAQ,eAAf,kBACA,4BACIhB,GAAG,cACHoB,aAAcL,KAAKb,MAAME,MACzBe,SAAUJ,KAAKN,gBACf,4BAAQrB,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,OAEJ,4BAAQiC,UAAU,wBAAwBtC,QAASgC,KAAKL,cAAxD,gB,GApCIY,IAAMC,WCoCfC,E,2MAhCbtB,MAAQ,CAAEL,KAAM,I,EAEhB4B,S,uCAAW,WAAOtB,EAAOC,GAAd,eAAAsB,EAAA,sEACYC,EAAWC,IAAI,kBAAmB,CACrD3D,OAAQ,CACNC,QAAS,mCACT2D,EAAG1B,EACHC,MAAOA,EACP0B,OAAQ,EACRC,OAAQ,IACRC,KAAM,QARD,OACHC,EADG,OAWT,EAAK1B,SAAS,CAAEV,KAAMoC,EAAOC,KAAKA,OAXzB,2C,gIAeT,OACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAWR,SAAUE,KAAKU,YAE5B,yBAAKJ,UAAU,UACb,kBAAC,EAAD,CAASxB,KAAMkB,KAAKb,MAAML,c,GAzBpByB,IAAMC,WCDxBY,IAASC,OAAO,kBAAC,EAAD,MAASlD,SAASmD,eAAe,W","file":"static/js/main.51eea700.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = 'g74xJI2ZSIfLWgBcMSa144sl2Ln3HMAH';\nconst URL = 'https://api.giphy.com';\n\nexport default axios.create({\n    baseURL: URL,\n    params: {\n        api_key: KEY\n    }\n});","import React from 'react';\n\nconst GifCard = ({ gif }) => {\n    const style = {\n        float: 'left',\n        margin: '10px',\n        background: `url(${gif.images.downsized.url}) 50% 50% no-repeat`,\n        width: '140px',\n        height: '140px',\n        cursor: 'pointer'\n    };\n\n    const copyToClipboard = str => {\n        const el = document.createElement('textarea');\n        el.value = str;\n        document.body.appendChild(el);\n        el.select();\n        document.execCommand('copy');\n        document.body.removeChild(el);\n    };\n\n    return (\n        <div style={style} onClick={() => copyToClipboard(gif.url)}></div>\n    );\n}\n\nexport default GifCard;","import React from 'react';\nimport GifCard from './GitCard';\n\nconst GifList = ({ gifs }) => {\n    const elements = gifs.map(gif => {\n        return (\n            <GifCard key={gif.id} gif={gif}></GifCard>\n        );\n    });\n\n    return (\n        <div>\n            {elements}\n        </div>\n    );\n}\n\nexport default GifList;","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { query: '', limit: 25 };\n\n    onInputChange = event => {\n        this.setState({ query: event.target.value });\n    }\n\n    onSelectChange = event => {\n        this.setState({ limit: event.target.value });\n    }\n\n    onFormSubmit = event => {\n        event.preventDefault();\n        this.props.onSearch(this.state.query, this.state.limit);\n    }\n\n    render() {\n        return (\n            <div>\n                <br />\n                <form onSubmit={this.onFormSubmit}>\n                    <label htmlFor=\"search-input\">Search Term</label>\n                    <input\n                        id=\"search-input\"\n                        type=\"text\"\n                        placeholder=\"Search...\"\n                        onChange={this.onInputChange} />\n                    <label htmlFor=\"limit-input\">How many GIFs?</label>\n                    <select\n                        id=\"limit-input\"\n                        defaultValue={this.state.limit}\n                        onChange={this.onSelectChange}>\n                        <option value=\"5\">5</option>\n                        <option value=\"25\">25</option>\n                        <option value=\"50\">50</option>\n                    </select>\n                    <button className=\"button button-outline\" onClick={this.onFormSubmit}>\n                        Search\n                    </button>\n                </form>\n            </div>\n        );\n    };\n}\n\nexport default SearchBar;","import React from 'react';\nimport repository from '../repositories/giphy.repository';\nimport GifList from './GifList';\nimport SearchBar from './SearchBar';\n\nclass App extends React.Component {\n  state = { gifs: [] };\n\n  doSearch = async (query, limit) => {\n    const result = await repository.get('/v1/gifs/search', {\n      params: {\n        api_key: 'g74xJI2ZSIfLWgBcMSa144sl2Ln3HMAH',\n        q: query,\n        limit: limit,\n        offset: 0,\n        rating: 'G',\n        lang: 'en',\n      }\n    });\n    this.setState({ gifs: result.data.data });\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"column column-25\">\n            <SearchBar onSearch={this.doSearch}></SearchBar>\n          </div>\n          <div className=\"column\">\n            <GifList gifs={this.state.gifs}></GifList>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}